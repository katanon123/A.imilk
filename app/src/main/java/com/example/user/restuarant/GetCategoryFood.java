package com.example.user.restuarant;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.os.Build;import android.os.Bundle;import android.os.StrictMode;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;import com.example.user.restuarant.commonclass.ReadJson;import com.squareup.picasso.Picasso;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashMap;public class GetCategoryFood extends AppCompatActivity {    ListView food_listview;    private ReadJson readJson;    String webservicepath;    private ArrayList<HashMap<String, String>> MyArrListTotal = new ArrayList<>();    private String url = "", resultJson,Id,Name,Language;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_get_category_food);        if(Build.VERSION.SDK_INT > 9) {            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();            StrictMode.setThreadPolicy(policy);        }        webservicepath = getResources().getString(R.string.path_webservice);        food_listview=(ListView)findViewById(R.id.food_listview);        Intent intent1 = getIntent();        Name = intent1.getStringExtra("Name");        Id = intent1.getStringExtra("Id");        setTitle("Category");        getData();        food_listview.setAdapter(new Adapter(getApplication(), MyArrListTotal));    }    private void getData() {        //เรียกใช้คุกกี้ภาษา        SharedPreferences cookieLanguage = getSharedPreferences("Language", 0);//เรียกใช้ คุ้กกี้        Language = cookieLanguage.getString("sName", " ");        HashMap<String, String> map;        readJson = new ReadJson();        url = webservicepath+"GetCategoryByType/"+Id;        resultJson = "GetCategoryByTypeResult";        String jsonResult = readJson.getHttpGet(url);        try {            JSONObject jsonObMain = new JSONObject(jsonResult);            JSONArray data = jsonObMain.getJSONArray(resultJson);            for (int i = 0; i < data.length(); i++) {                JSONObject c = data.getJSONObject(i);                map = new HashMap<String, String>();                //map.put("Name", c.getString("Name"));                map.put("Id", c.getString("Id"));                map.put("ImageURL", c.getString("ImageURL"));                String x = c.getString("NameProduct"); //ภาษา                try {                    JSONObject  j = new JSONObject(x);                    if(Language.equals("English")){                        map.put("Name", j.getString("English"));                    }                    else if(Language.equals("Thai")){                        map.put("Name", j.getString("Thai"));                    }                }                catch (JSONException e){                }                MyArrListTotal.add(map);            }        } catch (JSONException e) {            Log.e("error", e.toString());        }    }    public class Adapter extends BaseAdapter {        private Context context;        private ArrayList<HashMap<String, String>> MyArr = new ArrayList<HashMap<String, String>>();        private ArrayList<HashMap<String, String>> mStringFilterList = new ArrayList<HashMap<String, String>>();        public Adapter(Context c, ArrayList<HashMap<String, String>> list) {            context = c;            MyArr = list;            mStringFilterList = list;        }        @Override        public int getCount() {            return MyArr.size();        }        @Override        public Object getItem(int position) {            return position;        }        @Override        public long getItemId(int position) {            return position;        }        @Override        public View getView(int position, View convertView, ViewGroup parent) {            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            if (convertView == null) {                convertView = inflater.inflate(R.layout.gut_list_view_store, null);            }            TextView Name_textView = (TextView) convertView.findViewById(R.id.Name_textView);            TextView id_textView = (TextView) convertView.findViewById(R.id.id_textView);            ImageView pic_imageView =(ImageView)convertView.findViewById(R.id.pic_imageView);            Name_textView.setText(MyArr.get(position).get("Name"));            id_textView.setText(MyArr.get(position).get("Id"));            final String url = (MyArr.get(position).get("ImageURL"));            if (!url.equals("null")) {                try {                    Picasso.with(context)                            .load(url)                            .placeholder(R.drawable.aboutus) //ภาพเริ่มต้น                            .error(R.drawable.aboutus)                            .into(pic_imageView);//เอารูปตัวไหน                } catch (Exception e) {                }            }            food_listview.setOnItemClickListener(new AdapterView.OnItemClickListener() {                @Override                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                    Intent intent = new Intent(getApplication(), ListService.class);                    intent.putExtra("Id", MyArr.get(position).get("Id"));//ส่งค่า wedservice                    intent.putExtra("Name", MyArr.get(position).get("Name"));//ส่งค่า wedservice                    startActivity(intent);                }            });            return convertView;        }    }}