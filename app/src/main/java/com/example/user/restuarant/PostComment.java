package com.example.user.restuarant;import android.app.AlertDialog;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.os.StrictMode;import android.support.v7.app.AppCompatActivity;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.view.WindowManager;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import com.example.user.restuarant.commonclass.ReadJson;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.HashMap;public class PostComment extends AppCompatActivity {    Button send_button;    String Name,url;    private ReadJson readJson;    String webservicepath,p140,p162,p107,p155,p100,p136,p185;    EditText comment_editText;    TextView addr_textView;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_post_comment);        {            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder()                    .permitAll().build();            StrictMode.setThreadPolicy(policy);        }        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);        webservicepath = getResources().getString(R.string.path_webservice);        send_button =(Button)findViewById(R.id.send_button);        comment_editText=(EditText)findViewById(R.id.comment_editText);        addr_textView=(TextView)findViewById(R.id.addr_textView);        Intent intent = getIntent();        Name = intent.getStringExtra("Name");//รับค่าจากหน้าที่ส่งมาให้        setTitle(Name);        send_button.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                SharedPreferences cookie = getSharedPreferences("UserInfo", 0);//เรียกใช้ คุ้กกี้                int UserId  = cookie.getInt("sId", 0);                if (TextUtils.isEmpty(comment_editText.getText().toString())) {                    comment_editText.setError(p185);                    return;                }                else if (UserId == 0) {                    //Toast.makeText(getApplicationContext(), "กรุณาเข้าสู่ระบบ", Toast.LENGTH_LONG).show();                    final AlertDialog.Builder adb = new AlertDialog.Builder(PostComment.this);                    adb.setMessage(p155);//ดักว่าแน่ใจหรือไม่ที่จะออก                    adb.setNegativeButton(p100, new AlertDialog.OnClickListener() {                        public void onClick(DialogInterface dialog, int arg1) {                            Intent intent = new Intent(getApplication(), Login.class);                            startActivity(intent);                            finish();                        }                    });                    adb.setNeutralButton(p136, new DialogInterface.OnClickListener() {                        @Override                        public void onClick(DialogInterface dialog, int which) {                            finish();                        }                    });                    adb.show();                    return;                }                else {                    url = webservicepath + "Comment/Add";                    readJson = new ReadJson();                    JSONObject jsonObj = new JSONObject();                    try {                        jsonObj.put("Comment_user",comment_editText.getText().toString());                        jsonObj.put("CreateBy",UserId);                        String resultServer  = readJson.getHttpPost(url,jsonObj);                        try {                            JSONObject jsonObjRs = new JSONObject(resultServer);                            int Id = 0;                            String Message;                            boolean Success = false;                            for(int i = 0; i < jsonObjRs.length(); i++){                                Message = jsonObjRs.getString("Message");                                Success = jsonObjRs.getBoolean("Success");                            }if (Success) {                                SharedPreferences sp = getSharedPreferences("PostComment", Context.MODE_PRIVATE);//สร้างคุกกี้ ชื่อ"ภาษาไทย                                SharedPreferences.Editor editor = sp.edit(); // Create Session                                editor.putInt("sPostComment", 1);                                editor.commit();                                final AlertDialog.Builder adb = new AlertDialog.Builder(PostComment.this);                                adb.setMessage(p140);                                adb.setNegativeButton(p107, new AlertDialog.OnClickListener() {                                    public void onClick(DialogInterface dialog, int arg1) {                                    finish();                                    }                                });                                adb.show();                            } else {                                Toast.makeText(getApplicationContext(), p162, Toast.LENGTH_LONG).show();                            }                        } catch (JSONException e) {                            Toast.makeText(getApplicationContext(), p162, Toast.LENGTH_LONG).show();                        }                    } catch (JSONException e) {                        Toast.makeText(getApplicationContext(), p162, Toast.LENGTH_LONG).show();                    }                }            }        });        getMassage();    }    private void getMassage() {        readJson = new ReadJson();        //เรียกใช้คุกกี้ภาษา        SharedPreferences cookieLanguage = getSharedPreferences("Language", 0);//เรียกใช้ คุ้กกี้        String Language = cookieLanguage.getString("sName", "English");        HashMap<String, String> map;        url = webservicepath+"GetTextmessage";        String resultJson = "GetTextmessageResult";        String jsonResult = readJson.getHttpGet(url);        try {            JSONObject jsonObMain = new JSONObject(jsonResult);//Object            JSONArray data = jsonObMain.getJSONArray(resultJson);//Array            for (int i = 0; i < data.length(); i++) {                JSONObject c = data.getJSONObject(i);//Object                switch(c.getInt("Id")) {                    case 140://สำเร็จ                        p140 = c.getString(Language);                        break;                    case 162://ผิดพลาด!!!                        p162 = c.getString(Language);                        break;                    case 107://ตกลง                        p107 = c.getString(Language);                        break;                    case 155://กรุณาเข้าสู่ระบบ                        p155 = c.getString(Language);                        break;                    case 100://ลงชื่อเข้าใช้                        p100 = c.getString(Language);                        break;                    case 136://กลับ                        p136 = c.getString(Language);                        break;                    case 185://กรุณาใส่ข้อมูล                        p185 = c.getString(Language);                        break;                    case 183://สถานที่จัดส่ง                        addr_textView.setText(c.getString(Language));                        break;                    case 175://ตกลง                        send_button.setText(c.getString(Language));                        break;                    default:                }            }        } catch (JSONException e) {            e.printStackTrace();            Log.e("error", e.toString());        }    } //จบ}